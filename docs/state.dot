// to generate an image: dot -Tsvg -O state.dot
// requires grapvhiz
digraph RSConnectJupyter {
    node[shape=box]
    Publish [shape=oval]
    Done [shape=oval]
    "Save\nDocument"[shape=diamond]
    "Server\nmetadata?"[shape=diamond]
    "Add Server Dialog"[shape=parallelogram]
    Add[shape=diamond]
    "Publish Dialog"[shape=parallelogram]
    Publish1[shape=diamond]
    "Previous Title?"[shape=diamond]
    "Search Content Dialog"[shape=parallelogram]
    "Publish Request"[shape=diamond]

    Publish -> "Save\nDocument"

    "Save\nDocument" -> Failure -> "Error Dialog" -> Done
    "Save\nDocument" -> Success

    Success -> "Server\nmetadata?" -> {No, Yes}
    No -> "Add Server Dialog" -> {Cancel, Add}
    Yes -> "Publish Dialog"
    Cancel -> Done
    Add -> {"Invalid Details", "Valid Details"}
    "Invalid Details" -> "Add Server Dialog"
    "Valid Details" -> "Save Server Info" -> "Publish Dialog"

    Publish1 [label="Publish"]
    Invalid1 [label="Invalid Details"]
    Valid1 [label="Valid Details"]
    No2 [label="No"]
    "Publish Dialog" -> Cancel
    "Publish Dialog" -> Publish1 -> {Invalid1, Valid1}
    Invalid1 -> "Publish Dialog"
    Valid1 -> "Previous Title?" -> {No2, "Different Title", "Same Title"}
    No2 -> "Search Content Dialog"
    "Same Title" -> "Publish Request"
    "Different Title" -> "Search Content Dialog"

    Failure1 [label="Failure"]
    Success1 [label="Success"]
    "Publish Request" -> {Failure1, Success1}
    Failure1 -> "Publish Dialog"
    Success1 -> "Show Content Link" -> Done

    "Search Content Dialog" -> {Cancel, "New Content", "Overwrite Content"}
    {"New Content", "Overwrite Content"} -> "Publish Request"
}
